package api

import(
	"github.com/google/uuid"
)

type api struct {
	ID uuid.UUID `json:"id"`//not normal integer as
	Name string `json:"name"`//how keys and json data should look like
}

type Server struct{
	//we use gorilla mux has no field name
	*mux.router

	shoppingItems []Items
}

//code to intialize server struct
func newServer() *Server {
	s:=&Server{
	    Router:mux.NewRouter(),
		shoppingItems:[]Items{},
	}
	return s
}

//route handler
func (s *Server) createShoppingItem() http.Handler {
	return func(w http.ResponseWriter, r *http.Request){
		var i item
		if err:=json.NewDecoder(r.Body).Decode(&i);err!=nil{
			http.Error(w , err.Error(), http.StatusBadRequest)
			return
		}

		i.ID = uuid.New()
		s.shoppingItems = append(s.shoppingItems,i)

		w.Header().Set("Content-Type", "application/json")
		if err :=json.NewEncoder(w).Encode(i); err != nil {
			http.Error(w, err.Error(), http.StatusInternalServerError)
			return
		}
	}
}